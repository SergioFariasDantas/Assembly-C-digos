.eqv	num	$s0
.eqv	char	$s1
.eqv	digito	$s2
.eqv	i	$t0
.eqv	k	$t1
.eqv	flag	$t2


.data
ler_Lista:	.asciiz "lista.txt"
escrever_Lista:	.asciiz "lista_ordenada.txt"
buffer:		.space 1024	#Buffer para leitura de dados 
lista:		.space	400	#Espaço da memória usado para armazenar os números da lista
lista_tamanho:	.word	0
newline:	.asciiz"\n"

li	$t8, 200		#Tamanho do array
	.align 2
vetor_num: .space 1200

meuArray:
	.align 2
	.space 1200
.text
main:
#Abertura do arquivo para leitura:
	li	$v0, 13		#Abrir arquivo
	la	$a0, ler_Lista
	li	$a1, 0	#modo de leitura
	syscall
	move $s0, $v0

#Leitura do arquivo:
	move	$a0, $s0
	li	$v0, 14		
	la	$a1, buffer
	la	$a2, 1024
	syscall

#Fechar o arquivo:
	li	$v0, 16
	move	$a0, $s0
	syscall

#Rotina de retorno do tamanho de uma string para um inteiro:
    li	i, 0
    li  k, 0
    li	num, 0
    li	flag, 1
loop_1:    
    lb	char, ler_Lista(i)
    beqz	char, fim
    beq	char, ',', armazena
    beq	char '-', negativo
    
converte:
   sub	digito, char, 0x30
   mul	$t3, num, 10
   add	num, $t3, digito
   addi	i, i, 1
   j	loop_1


negativo:
     li	flag, -1
     addi	i, i, 1
     j	loop_1   	    

armazena:
   mul     	num, num, flag
   sw	num, vetor_num(k)
   addi	k, k, 4
   addi	i, i, 1
   beqz	char, fim
   j	loop_1


fim:

#Algoritmo de ordenação e armazenamento na memória
   li   $t4, 0             # Inicializa o índice para percorrer vetor_num
   li   $t5, 0             # Inicializa o índice para percorrer meuArray
   li   $t6, 200           # Tamanho do array ou condição de parada



loop_2:
   beq  $t4, $t6, saiLoop  # Sai do loop se o índice alcançar o tamanho desejado

   # Carregar o valor de vetor_num
   lw    $t3, vetor_num($t4)
   
   # Armazenar o valor em meuArray
   sw   $t3, meuArray($t5)
   
   # Incrementar os índices
   addi $t4, $t4, 4        # Próximo elemento de vetor_num
   addi $t5, $t5, 4        # Próximo elemento de meuArray

   j    loop_2             # Continua o loop

saiLoop:
      
#Abertura do arquivo para escrita:
   li 	$v0, 13		#Abrir arquivo
   la	$a0, escrever_Lista
   li	$a1, 1	#Modo Escrita
   syscall
   
   move	$s0, $v0
 
#Escrevendo no arquivo
	li	$v0, 15
	move	$a0, $s0
	la	$a1, meuArray
	li	$a2, 1200
	syscall
	
#Fechar o arquivo
	li	$v0, 16
	move	$a0, $s0
	syscall
   
